---
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import { formatDate } from '../../../utils/dates';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const categories = [...new Set(posts.map(post => post.data.category))];
  
  return categories.map(category => ({
    params: { category },
    props: { 
      posts: posts.filter(post => post.data.category === category)
        .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    }
  }));
}

const { category } = Astro.params;
const { posts } = Astro.props;

const categoryTitles = {
  local: "Noticias Locales",
  servicios: "Servicios de Pintura"
};

const categoryDescriptions = {
  local: "Noticias y actualizaciones sobre pintura en El Cañaveral y alrededores",
  servicios: "Información detallada sobre nuestros servicios de pintura profesional"
};
---

<Layout 
  title={`${categoryTitles[category]} | Blog Pintores El Cañaveral`}
  description={categoryDescriptions[category]}
>
  <main class="pt-24">
    <section class="bg-white py-16">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <span class="bg-orange-50 text-primary px-4 py-2 rounded-full text-sm font-medium">
            {category.charAt(0).toUpperCase() + category.slice(1)}
          </span>
          <h1 class="text-4xl font-bold mt-4 mb-4">{categoryTitles[category]}</h1>
          <p class="text-gray-600 max-w-2xl mx-auto">
            {categoryDescriptions[category]}
          </p>
        </div>

        <!-- Categorías -->
        <div class="flex flex-wrap gap-4 justify-center mb-12">
          <a 
            href="/blog" 
            class="px-4 py-2 rounded-full border border-gray-300 hover:border-primary hover:text-primary transition-colors"
          >
            Todos
          </a>
          {Object.keys(categoryTitles).map(cat => (
            <a 
              href={`/blog/categoria/${cat}`}
              class={`px-4 py-2 rounded-full ${cat === category ? 'bg-primary text-white' : 'border border-gray-300 hover:border-primary hover:text-primary'} transition-colors`}
            >
              {cat.charAt(0).toUpperCase() + cat.slice(1)}
            </a>
          ))}
        </div>

        <!-- Posts -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {posts.map(post => (
            <article class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300">
              {post.data.image && (
                <img 
                  src={post.data.image} 
                  alt={post.data.title}
                  class="w-full h-48 object-cover"
                />
              )}
              <div class="p-6">
                <div class="flex items-center gap-4 mb-4">
                  <span class="text-sm text-primary font-medium">
                    {post.data.category.charAt(0).toUpperCase() + post.data.category.slice(1)}
                  </span>
                  <span class="text-sm text-gray-500">
                    {formatDate(post.data.pubDate)}
                  </span>
                </div>
                <h2 class="text-xl font-bold mb-2 hover:text-primary transition-colors">
                  <a href={`/blog/${post.slug}`}>{post.data.title}</a>
                </h2>
                <p class="text-gray-600 mb-4 line-clamp-3">
                  {post.data.description}
                </p>
                <div class="flex flex-wrap gap-2">
                  {post.data.tags.map(tag => (
                    <span class="text-xs bg-gray-100 px-2 py-1 rounded-full">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>
    </section>
  </main>
</Layout>